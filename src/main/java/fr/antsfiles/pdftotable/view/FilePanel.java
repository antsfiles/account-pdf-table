/*
 *  antsfiles
 */
package fr.antsfiles.pdftotable.view;

import fr.antsfiles.pdftotable.MainControler;
import java.awt.Desktop;
import java.awt.datatransfer.DataFlavor;
import java.awt.dnd.DnDConstants;
import java.awt.dnd.DropTarget;
import java.awt.dnd.DropTargetDropEvent;
import java.io.File;
import java.io.FileFilter;
import java.io.IOException;
import java.util.List;
import java.util.Objects;
import java.util.stream.Stream;

/**
 *
 * @author tonio
 */
public class FilePanel extends javax.swing.JPanel {

    private MainControler mainControler;

    private File directory;
    private File[] files;
    private int indexInDir = 0;

    /**
     * Creates new form FilePanel
     */
    public FilePanel() {
        initComponents();

        this.setDropTarget(new DropTarget() {
            public synchronized void drop(DropTargetDropEvent evt) {
                try {
                    evt.acceptDrop(DnDConstants.ACTION_COPY);
                    List<File> droppedFiles = (List<File>) evt.getTransferable().getTransferData(DataFlavor.javaFileListFlavor);
                    for (File file : droppedFiles) {
                        // process files
                        directory = file.getParentFile();
                        files = directory.listFiles(new FileFilter() {
                            @Override
                            public boolean accept(File pathname) {
                                return pathname.getName().toLowerCase().endsWith(".pdf");
                            }
                        });
                        files = (File[]) Stream.of(files).sorted().toList().toArray(new File[0]);
                        setFileSelected(file);
                        for (int i = 0; i < files.length; i++) {
                            if (Objects.equals(files[i], file)) {
                                indexInDir = i;
                            }
                        }
                    }
                    evt.dropComplete(true);
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
            }
        });
    }

    public void setMainControler(MainControler mainControler) {
        this.mainControler = mainControler;
    }

    private void setFileSelected(File file) {
        jLabelFilePath.setText(file.getPath());
        mainControler.setFile(file);
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this
     * method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jButtonReadWithLayout = new javax.swing.JButton();
        jButtonRead = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabelFilePath = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jButtonPrev = new javax.swing.JButton();
        jButtonNext = new javax.swing.JButton();
        jButtonOpen = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        jButtonReadWithLayout.setText("read by layout");
        jButtonReadWithLayout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonReadWithLayoutActionPerformed(evt);
            }
        });
        jPanel2.add(jButtonReadWithLayout);

        jButtonRead.setText("read by text");
        jButtonRead.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonReadActionPerformed(evt);
            }
        });
        jPanel2.add(jButtonRead);

        add(jPanel2, java.awt.BorderLayout.WEST);

        jLabelFilePath.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabelFilePath.setText("drop file here");
        jPanel1.add(jLabelFilePath);

        add(jPanel1, java.awt.BorderLayout.CENTER);

        jButtonPrev.setText("<<");
        jButtonPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPrevActionPerformed(evt);
            }
        });
        jPanel3.add(jButtonPrev);

        jButtonNext.setText(">>");
        jButtonNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNextActionPerformed(evt);
            }
        });
        jPanel3.add(jButtonNext);

        jButtonOpen.setText("Open");
        jButtonOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOpenActionPerformed(evt);
            }
        });
        jPanel3.add(jButtonOpen);

        add(jPanel3, java.awt.BorderLayout.EAST);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonReadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonReadActionPerformed

        mainControler.readFile(new File(jLabelFilePath.getText()));
    }//GEN-LAST:event_jButtonReadActionPerformed

    private void jButtonReadWithLayoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonReadWithLayoutActionPerformed

        mainControler.readFileWithLayout(new File(jLabelFilePath.getText()), null);
    }//GEN-LAST:event_jButtonReadWithLayoutActionPerformed

    private void jButtonPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPrevActionPerformed
        if (files != null) {
            indexInDir = indexInDir > 0 ? indexInDir - 1 : 0;
            setFileSelected(files[indexInDir]);
            mainControler.readFileWithLayout(mainControler.getFile());
        }
    }//GEN-LAST:event_jButtonPrevActionPerformed

    private void jButtonNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNextActionPerformed
        if (files != null) {
            indexInDir = (indexInDir < files.length - 2) ? indexInDir + 1 : files.length - 1;
            setFileSelected(files[indexInDir]);
            mainControler.readFileWithLayout(mainControler.getFile());
        }
    }//GEN-LAST:event_jButtonNextActionPerformed

    private void jButtonOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOpenActionPerformed
        File f = new File(jLabelFilePath.getText());
        try {
            Desktop.getDesktop().open(f);
        } catch (IOException ex) {
            //jLabelStatus.setText(ex.getMessage());
            mainControler.status().onNext(ex.getMessage());
        }
    }//GEN-LAST:event_jButtonOpenActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonNext;
    private javax.swing.JButton jButtonOpen;
    private javax.swing.JButton jButtonPrev;
    private javax.swing.JButton jButtonRead;
    private javax.swing.JButton jButtonReadWithLayout;
    private javax.swing.JLabel jLabelFilePath;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    // End of variables declaration//GEN-END:variables
}
